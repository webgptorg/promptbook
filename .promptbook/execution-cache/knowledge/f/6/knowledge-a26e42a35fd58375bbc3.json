{
    "date": "2025-04-02T17:25:52.195Z",
    "promptbookVersion": "0.89.0-11",
    "prompt": {
        "title": "Knowledge",
        "pipelineUrl": "https://promptbook.studio/promptbook/prepare-knowledge-from-markdown.book#knowledge",
        "parameters": {
            "knowledgeContent": "✨ Promptbook 🌟 New Features 🤍 The Book Abstract It's time for a paradigm shift! The future of software is in plain English, French or Latin. During the computer revolution, we have seen multiple generations of computer languages, from the physical rewiring of the vacuum tubes through low-level machine code to the high-level languages like Python or JavaScript. And now, we're on the edge of the next revolution! It's a revolution of writing software in plain human language that is understandable and executable by both humans and machines – and it's going to change everything! The incredible growth in power of microprocessors and the Moore's Law have been the driving force behind the ever-more powerful languages, and it's been an amazing journey! Similarly, the large language models (like GPT or Claude) are the next big thing in language technology, and they're set to transform the way we interact with computers. This shift is going to happen, whether we are ready for it or not. Our mission is to make it excellently, not just good. Join us in this journey! 🚀 Get started Take a look at the simple starter kit with books integrated into the Hello World sample applications: 💜 The Promptbook Project Promptbook project is ecosystem of multiple projects and tools, following is a list of most important pieces of the project: Project About Book language Book is a human-understandable markup language for writing AI applications such as chatbots, knowledge bases, agents, avarars, translators, automations and more. There is also a plugin for VSCode to support .book file extension Promptbook Engine Promptbook engine can run applications written in Book language. It is released as multiple NPM packages and Docker HUB Promptbook Studio Promptbook.studio is a web-based editor and runner for book applications. It is still in the experimental MVP stage. Hello world examples: We also have a community of developers and users of Promptbook: And Promptbook.studio branded socials: And Promptujeme sub-brand: /Subbrand for Czech clients/ And Promptbook.city branded socials: /Sub-brand for images and graphics generated via Promptbook prompting/ 💙 The Book language Following is the documentation and blueprint of the Book language. Book is a language that can be used to write AI applications, agents, workflows, automations, knowledgebases, translators, sheet processors, email automations and more. It allows you to harness the power of AI models in human-like terms, without the need to know the specifics and technicalities of the models. Example Each part of the book defines one of 3 circles: What: Workflows, Tasks and Parameters What work needs to be done. Each book defines a workflow, which is one or more tasks. Each workflow has a fixed input and output. For example, you have a book that generates an article from a topic. Once it generates an article about AI, once about marketing, once about cooking. The workflow (= your AI program) is the same, only the input and output change. Related commands: Who: Personas Who does the work. Each task is performed by a persona. A persona is a description of your virtual employee. It is a higher abstraction than the model, tokens, temperature, top-k, top-p and other model parameters. You can describe what you want in human language like Jane, creative writer with a sense of sharp humour instead of gpt-4-2024-13-31, temperature 1.2, top-k 40, STOP token \".\\n\",.... Personas can have access to different knowledge, tools and actions. They can also consult their work with other personas or user, if allowed. Related commands: How: Knowledge, Instruments and Actions The resources used by the personas are used to do the work. Related commands: KNOWLEDGE of documents, websites, and other resources INSTRUMENT for real-time data like time, location, weather, stock prices, searching the internet, calculations, etc. ACTION for actions like sending emails, creating files, ending a workflow, etc. General principles of book language Book language is based on markdown. It is subset of markdown. It is designed to be easy to read and write. It is designed to be understandable by both humans and machines and without specific knowledge of the language. The file has .book extension. It uses UTF-8 non BOM encoding. Book has two variants: flat - which is just a prompt with no structure, and full - which has a structure with tasks, commands and prompts. As it is source code, it can leverage all the features of version control systems like git and does not suffer from the problems of binary formats, proprietary formats, or no-code solutions. But unlike programming languages, it is designed to be understandable by non-programmers and non-technical people. 📦 Packages (for developers) This library is divided into several packages, all are published from single monorepo. You can install all of them at once: Or you can install them separately: ⭐ Marked packages are worth to try first 📚 Dictionary The following glossary is used to clarify certain concepts: General LLM / AI terms Note: This section is not complete dictionary, more list of general AI / LLM terms that has connection with Promptbook 💯 Core concepts Advanced concepts 🚂 Promptbook Engine ➕➖ When to use Promptbook? ➕ When to use See more ➖ When not to use See more 🐜 Known issues 🧼 Intentionally not implemented features ❔ FAQ If you have a question start a discussion, open an issue or write me an email. ⌚ Changelog See CHANGELOG.md 📜 License Promptbook project is under BUSL 1.1 is an SPDX license 🎯 Todos See TODO.md 🤝 Partners 🖋️ Contributing We are open to pull requests, feedback, and suggestions. You can also ⭐ star the project, follow us on GitHub or various other social networks. "
        },
        "content": "You are experienced data researcher, extract the important knowledge from the document.\n\n# Rules\n\n-   Make pieces of information concise, clear, and easy to understand\n-   One piece of information should be approximately 1 paragraph\n-   Divide the paragraphs by markdown horizontal lines ---\n-   Omit irrelevant information\n-   Group redundant information\n-   Write just extracted information, nothing else\n\n# The document\n\nTake information from this document:\n\n> {knowledgeContent}",
        "modelRequirements": {
            "modelVariant": "CHAT"
        },
        "expectations": {}
    },
    "promptResult": {
        "content": "---\n\nPromptbook is a project aimed at revolutionizing software development by enabling the creation of AI applications using plain human language. It represents a shift from traditional programming languages to a more accessible approach that both humans and machines can understand and execute.\n\n---\n\nThe Book language is a human-understandable markup language for writing AI applications such as chatbots, knowledge bases, agents, avatars, translators, and automations. It is based on markdown and designed to be easily readable and writable without requiring specific technical knowledge.\n\n---\n\nPromptbook consists of three main components: \"What\" (Workflows, Tasks, and Parameters), \"Who\" (Personas), and \"How\" (Knowledge, Instruments, and Actions). These components define the work to be done, who performs it, and the resources used, respectively.\n\n---\n\nThe Promptbook ecosystem includes the Book language, Promptbook Engine (for running Book applications), and Promptbook Studio (a web-based editor and runner for Book applications). It also has a community of developers and users, as well as branded social media presence.\n\n---\n\nPromptbook is designed to leverage the power of large language models (like GPT or Claude) to transform human-computer interaction. It aims to make AI application development accessible to non-programmers and non-technical people while maintaining the benefits of version control systems.\n\n---\n\nThe project is divided into several packages, all published from a single monorepo. It is licensed under BUSL 1.1 and is open to contributions, feedback, and suggestions from the community.",
        "modelName": "claude-3-5-sonnet-20240620",
        "timing": {
            "start": "2025-04-02T17:25:46.074Z",
            "complete": "2025-04-02T17:25:52.194Z"
        },
        "usage": {
            "price": {
                "value": 0.009413999999999999
            },
            "input": {
                "tokensCount": {
                    "value": 1448
                },
                "charactersCount": {
                    "value": 6191
                },
                "wordsCount": {
                    "value": 1022
                },
                "sentencesCount": {
                    "value": 58
                },
                "linesCount": {
                    "value": 105
                },
                "paragraphsCount": {
                    "value": 6
                },
                "pagesCount": {
                    "value": 3
                }
            },
            "output": {
                "tokensCount": {
                    "value": 338
                },
                "charactersCount": {
                    "value": 1622
                },
                "wordsCount": {
                    "value": 233
                },
                "sentencesCount": {
                    "value": 13
                },
                "linesCount": {
                    "value": 34
                },
                "paragraphsCount": {
                    "value": 12
                },
                "pagesCount": {
                    "value": 1
                }
            }
        },
        "rawPromptContent": "You are experienced data researcher, extract the important knowledge from the document.\n\n# Rules\n\n-   Make pieces of information concise, clear, and easy to understand\n-   One piece of information should be approximately 1 paragraph\n-   Divide the paragraphs by markdown horizontal lines ---\n-   Omit irrelevant information\n-   Group redundant information\n-   Write just extracted information, nothing else\n\n# The document\n\nTake information from this document:\n\n> ✨ Promptbook 🌟 New Features 🤍 The Book Abstract It's time for a paradigm shift! The future of software is in plain English, French or Latin. During the computer revolution, we have seen multiple generations of computer languages, from the physical rewiring of the vacuum tubes through low-level machine code to the high-level languages like Python or JavaScript. And now, we're on the edge of the next revolution! It's a revolution of writing software in plain human language that is understandable and executable by both humans and machines – and it's going to change everything! The incredible growth in power of microprocessors and the Moore's Law have been the driving force behind the ever-more powerful languages, and it's been an amazing journey! Similarly, the large language models (like GPT or Claude) are the next big thing in language technology, and they're set to transform the way we interact with computers. This shift is going to happen, whether we are ready for it or not. Our mission is to make it excellently, not just good. Join us in this journey! 🚀 Get started Take a look at the simple starter kit with books integrated into the Hello World sample applications: 💜 The Promptbook Project Promptbook project is ecosystem of multiple projects and tools, following is a list of most important pieces of the project: Project About Book language Book is a human-understandable markup language for writing AI applications such as chatbots, knowledge bases, agents, avarars, translators, automations and more. There is also a plugin for VSCode to support .book file extension Promptbook Engine Promptbook engine can run applications written in Book language. It is released as multiple NPM packages and Docker HUB Promptbook Studio Promptbook.studio is a web-based editor and runner for book applications. It is still in the experimental MVP stage. Hello world examples: We also have a community of developers and users of Promptbook: And Promptbook.studio branded socials: And Promptujeme sub-brand: /Subbrand for Czech clients/ And Promptbook.city branded socials: /Sub-brand for images and graphics generated via Promptbook prompting/ 💙 The Book language Following is the documentation and blueprint of the Book language. Book is a language that can be used to write AI applications, agents, workflows, automations, knowledgebases, translators, sheet processors, email automations and more. It allows you to harness the power of AI models in human-like terms, without the need to know the specifics and technicalities of the models. Example Each part of the book defines one of 3 circles: What: Workflows, Tasks and Parameters What work needs to be done. Each book defines a workflow, which is one or more tasks. Each workflow has a fixed input and output. For example, you have a book that generates an article from a topic. Once it generates an article about AI, once about marketing, once about cooking. The workflow (= your AI program) is the same, only the input and output change. Related commands: Who: Personas Who does the work. Each task is performed by a persona. A persona is a description of your virtual employee. It is a higher abstraction than the model, tokens, temperature, top-k, top-p and other model parameters. You can describe what you want in human language like Jane, creative writer with a sense of sharp humour instead of gpt-4-2024-13-31, temperature 1.2, top-k 40, STOP token \".\\n\",.... Personas can have access to different knowledge, tools and actions. They can also consult their work with other personas or user, if allowed. Related commands: How: Knowledge, Instruments and Actions The resources used by the personas are used to do the work. Related commands: KNOWLEDGE of documents, websites, and other resources INSTRUMENT for real-time data like time, location, weather, stock prices, searching the internet, calculations, etc. ACTION for actions like sending emails, creating files, ending a workflow, etc. General principles of book language Book language is based on markdown. It is subset of markdown. It is designed to be easy to read and write. It is designed to be understandable by both humans and machines and without specific knowledge of the language. The file has .book extension. It uses UTF-8 non BOM encoding. Book has two variants: flat - which is just a prompt with no structure, and full - which has a structure with tasks, commands and prompts. As it is source code, it can leverage all the features of version control systems like git and does not suffer from the problems of binary formats, proprietary formats, or no-code solutions. But unlike programming languages, it is designed to be understandable by non-programmers and non-technical people. 📦 Packages (for developers) This library is divided into several packages, all are published from single monorepo. You can install all of them at once: Or you can install them separately: ⭐ Marked packages are worth to try first 📚 Dictionary The following glossary is used to clarify certain concepts: General LLM / AI terms Note: This section is not complete dictionary, more list of general AI / LLM terms that has connection with Promptbook 💯 Core concepts Advanced concepts 🚂 Promptbook Engine ➕➖ When to use Promptbook? ➕ When to use See more ➖ When not to use See more 🐜 Known issues 🧼 Intentionally not implemented features ❔ FAQ If you have a question start a discussion, open an issue or write me an email. ⌚ Changelog See CHANGELOG.md 📜 License Promptbook project is under BUSL 1.1 is an SPDX license 🎯 Todos See TODO.md 🤝 Partners 🖋️ Contributing We are open to pull requests, feedback, and suggestions. You can also ⭐ star the project, follow us on GitHub or various other social networks. ",
        "rawRequest": {
            "model": "claude-3-5-sonnet-20240620",
            "max_tokens": 4096,
            "messages": [
                {
                    "role": "user",
                    "content": "You are experienced data researcher, extract the important knowledge from the document.\n\n# Rules\n\n-   Make pieces of information concise, clear, and easy to understand\n-   One piece of information should be approximately 1 paragraph\n-   Divide the paragraphs by markdown horizontal lines ---\n-   Omit irrelevant information\n-   Group redundant information\n-   Write just extracted information, nothing else\n\n# The document\n\nTake information from this document:\n\n> ✨ Promptbook 🌟 New Features 🤍 The Book Abstract It's time for a paradigm shift! The future of software is in plain English, French or Latin. During the computer revolution, we have seen multiple generations of computer languages, from the physical rewiring of the vacuum tubes through low-level machine code to the high-level languages like Python or JavaScript. And now, we're on the edge of the next revolution! It's a revolution of writing software in plain human language that is understandable and executable by both humans and machines – and it's going to change everything! The incredible growth in power of microprocessors and the Moore's Law have been the driving force behind the ever-more powerful languages, and it's been an amazing journey! Similarly, the large language models (like GPT or Claude) are the next big thing in language technology, and they're set to transform the way we interact with computers. This shift is going to happen, whether we are ready for it or not. Our mission is to make it excellently, not just good. Join us in this journey! 🚀 Get started Take a look at the simple starter kit with books integrated into the Hello World sample applications: 💜 The Promptbook Project Promptbook project is ecosystem of multiple projects and tools, following is a list of most important pieces of the project: Project About Book language Book is a human-understandable markup language for writing AI applications such as chatbots, knowledge bases, agents, avarars, translators, automations and more. There is also a plugin for VSCode to support .book file extension Promptbook Engine Promptbook engine can run applications written in Book language. It is released as multiple NPM packages and Docker HUB Promptbook Studio Promptbook.studio is a web-based editor and runner for book applications. It is still in the experimental MVP stage. Hello world examples: We also have a community of developers and users of Promptbook: And Promptbook.studio branded socials: And Promptujeme sub-brand: /Subbrand for Czech clients/ And Promptbook.city branded socials: /Sub-brand for images and graphics generated via Promptbook prompting/ 💙 The Book language Following is the documentation and blueprint of the Book language. Book is a language that can be used to write AI applications, agents, workflows, automations, knowledgebases, translators, sheet processors, email automations and more. It allows you to harness the power of AI models in human-like terms, without the need to know the specifics and technicalities of the models. Example Each part of the book defines one of 3 circles: What: Workflows, Tasks and Parameters What work needs to be done. Each book defines a workflow, which is one or more tasks. Each workflow has a fixed input and output. For example, you have a book that generates an article from a topic. Once it generates an article about AI, once about marketing, once about cooking. The workflow (= your AI program) is the same, only the input and output change. Related commands: Who: Personas Who does the work. Each task is performed by a persona. A persona is a description of your virtual employee. It is a higher abstraction than the model, tokens, temperature, top-k, top-p and other model parameters. You can describe what you want in human language like Jane, creative writer with a sense of sharp humour instead of gpt-4-2024-13-31, temperature 1.2, top-k 40, STOP token \".\\n\",.... Personas can have access to different knowledge, tools and actions. They can also consult their work with other personas or user, if allowed. Related commands: How: Knowledge, Instruments and Actions The resources used by the personas are used to do the work. Related commands: KNOWLEDGE of documents, websites, and other resources INSTRUMENT for real-time data like time, location, weather, stock prices, searching the internet, calculations, etc. ACTION for actions like sending emails, creating files, ending a workflow, etc. General principles of book language Book language is based on markdown. It is subset of markdown. It is designed to be easy to read and write. It is designed to be understandable by both humans and machines and without specific knowledge of the language. The file has .book extension. It uses UTF-8 non BOM encoding. Book has two variants: flat - which is just a prompt with no structure, and full - which has a structure with tasks, commands and prompts. As it is source code, it can leverage all the features of version control systems like git and does not suffer from the problems of binary formats, proprietary formats, or no-code solutions. But unlike programming languages, it is designed to be understandable by non-programmers and non-technical people. 📦 Packages (for developers) This library is divided into several packages, all are published from single monorepo. You can install all of them at once: Or you can install them separately: ⭐ Marked packages are worth to try first 📚 Dictionary The following glossary is used to clarify certain concepts: General LLM / AI terms Note: This section is not complete dictionary, more list of general AI / LLM terms that has connection with Promptbook 💯 Core concepts Advanced concepts 🚂 Promptbook Engine ➕➖ When to use Promptbook? ➕ When to use See more ➖ When not to use See more 🐜 Known issues 🧼 Intentionally not implemented features ❔ FAQ If you have a question start a discussion, open an issue or write me an email. ⌚ Changelog See CHANGELOG.md 📜 License Promptbook project is under BUSL 1.1 is an SPDX license 🎯 Todos See TODO.md 🤝 Partners 🖋️ Contributing We are open to pull requests, feedback, and suggestions. You can also ⭐ star the project, follow us on GitHub or various other social networks. "
                }
            ]
        },
        "rawResponse": {
            "id": "msg_011FDTcBAJAMboyxqD3xwgLm",
            "type": "message",
            "role": "assistant",
            "model": "claude-3-5-sonnet-20240620",
            "content": [
                {
                    "type": "text",
                    "text": "---\n\nPromptbook is a project aimed at revolutionizing software development by enabling the creation of AI applications using plain human language. It represents a shift from traditional programming languages to a more accessible approach that both humans and machines can understand and execute.\n\n---\n\nThe Book language is a human-understandable markup language for writing AI applications such as chatbots, knowledge bases, agents, avatars, translators, and automations. It is based on markdown and designed to be easily readable and writable without requiring specific technical knowledge.\n\n---\n\nPromptbook consists of three main components: \"What\" (Workflows, Tasks, and Parameters), \"Who\" (Personas), and \"How\" (Knowledge, Instruments, and Actions). These components define the work to be done, who performs it, and the resources used, respectively.\n\n---\n\nThe Promptbook ecosystem includes the Book language, Promptbook Engine (for running Book applications), and Promptbook Studio (a web-based editor and runner for Book applications). It also has a community of developers and users, as well as branded social media presence.\n\n---\n\nPromptbook is designed to leverage the power of large language models (like GPT or Claude) to transform human-computer interaction. It aims to make AI application development accessible to non-programmers and non-technical people while maintaining the benefits of version control systems.\n\n---\n\nThe project is divided into several packages, all published from a single monorepo. It is licensed under BUSL 1.1 and is open to contributions, feedback, and suggestions from the community."
                }
            ],
            "stop_reason": "end_turn",
            "stop_sequence": null,
            "usage": {
                "input_tokens": 1448,
                "cache_creation_input_tokens": 0,
                "cache_read_input_tokens": 0,
                "output_tokens": 338
            }
        }
    }
}
