{
    "name": "promptbook-engine",
    "version": "0.101.0-5",
    "description": "Promptbook: Run AI apps in plain human language across multiple models and platforms",
    "--note-0": "    <- [üêä]",
    "private": false,
    "sideEffects": false,
    "repository": {
        "type": "git",
        "url": "https://github.com/webgptorg/promptbook"
    },
    "author": "Pavol Hejn√Ω <pavol@ptbk.io> (https://www.pavolhejny.com/)",
    "contributors": [
        "Pavol Hejn√Ω <pavol@ptbk.io> (https://www.pavolhejny.com/)",
        "Ji≈ô√≠ Jahn <jiri@ptbk.io> (https://www.ptbk.io/)"
    ],
    "--note-1": "[‚ùáÔ∏è]",
    "keywords": [
        "ai",
        "llm",
        "prompt",
        "template",
        "language-model",
        "chatgpt",
        "autogpt",
        "machine-learning",
        "natural-language-processing",
        "nlp",
        "openai",
        "o3",
        "o3-mini",
        "deepseek",
        "gpt-3",
        "gpt-4",
        "gpt-4o",
        "gpt-4o-mini",
        "o1",
        "o1-mini",
        "o1-preview",
        "anthropic",
        "claude",
        "claude-3",
        "claude-3-opus",
        "claude-3-sonnet",
        "claude-3-haiku",
        "gemini",
        "gemini-pro",
        "gemini-flash",
        "mixtral",
        "mistral",
        "ollama",
        "ai-orchestration",
        "prompt-engineering",
        "llmops",
        "multimodal",
        "reasoning",
        "rag",
        "embeddings",
        "function-calling",
        "large-language-models",
        "ai-application-framework",
        "text-generation",
        "ai-agents",
        "LLMOps",
        "book-language",
        "markdown-dsl",
        "ai-workflow",
        "ai-automation",
        "pipeline",
        "workflow",
        "orchestration",
        "ai-pipeline",
        "prompt-template",
        "prompt-chaining",
        "ai-scripting",
        "conversational-ai",
        "chatbot",
        "ai-assistant",
        "knowledge-base",
        "document-processing",
        "web-scraping",
        "pdf-processing",
        "csv-processing",
        "json-processing",
        "xml-processing",
        "markdown-processing",
        "wikipedia-scraping",
        "website-crawler",
        "azure-openai",
        "vercel-ai",
        "docker",
        "cli-tool",
        "typescript",
        "javascript",
        "nodejs",
        "browser",
        "cross-platform",
        "api-integration",
        "remote-execution",
        "caching",
        "rate-limiting",
        "error-handling",
        "validation",
        "testing",
        "mocking",
        "personas",
        "expectations",
        "postprocessing",
        "preprocessing",
        "templating",
        "parameterization",
        "configuration",
        "logging",
        "monitoring",
        "debugging",
        "vscode-extension",
        "syntax-highlighting",
        "intellisense",
        "developer-tools",
        "ai-development",
        "prompt-management",
        "model-agnostic",
        "multi-model",
        "ai-sdk",
        "ai-framework",
        "ai-platform",
        "generative-ai",
        "content-generation",
        "text-processing",
        "natural-language",
        "human-readable",
        "plain-english",
        "no-code",
        "low-code",
        "automation-framework",
        "workflow-engine",
        "task-automation",
        "ai-ops",
        "mlops",
        "devops",
        "ci-cd",
        "version-control",
        "git-friendly",
        "collaboration",
        "team-development",
        "enterprise",
        "scalable",
        "production-ready",
        "open-source",
        "community",
        "extensible",
        "plugin-system",
        "integration",
        "api-wrapper",
        "sdk-wrapper",
        "abstraction-layer",
        "unified-interface",
        "cross-provider",
        "vendor-agnostic",
        "future-proof",
        "paradigm-shift",
        "next-generation",
        "revolutionary",
        "innovative",
        "cutting-edge",
        "state-of-the-art"
    ],
    "license": "BUSL-1.1",
    "bugs": {
        "url": "https://github.com/webgptorg/promptbook/issues"
    },
    "homepage": "https://ptbk.io/",
    "funding": [
        {
            "type": "individual",
            "url": "https://buymeacoffee.com/hejny"
        },
        {
            "type": "github",
            "url": "https://github.com/webgptorg/promptbook/blob/main/README.md#%EF%B8%8F-contributing"
        }
    ],
    "scripts": {
        "test": "echo \"Note: Running from most lightweight to heaviest tests\" && npm run test-name-discrepancies && npm run test-spellcheck && npm run test-lint && npm run test-types && npm run test-books && npm run test-package-generation && npm run test-unit",
        "test-without-package-generation": "echo \"Note: Running from most lightweight to heaviest tests\" && npm run test-name-discrepancies && npm run test-spellcheck && npm run test-lint && npm run test-types && npm run test-books && npm run test-unit",
        "test-without-package-generation-and-unit": "echo \"Note: Running from most lightweight to heaviest tests\" && npm run test-name-discrepancies && npm run test-spellcheck && npm run test-lint && npm run test-types && npm run test-books",
        "test-unit": "jest --forceExit",
        "_TODO-0": "           <- TODO: Remove `--forceExit` flag, now its present to ensure return code 0 when all tests ",
        "test-types": "tsc",
        "test-lint": "eslint src",
        "test-spellcheck": "cspell \"src/**/*.{ts,tsx,js,jsx,md,json}\"",
        "test-books": "npx ts-node ./src/cli/test/ptbk.ts test --provider BRING_YOUR_OWN_KEYS --no-prepare \"./**/*.book\" --ignore \"./book/**/*,./examples/pipelines/errors/**/*\" --verbose",
        "test-package-generation": "npx ts-node ./scripts/generate-packages/generate-packages.ts --skip-bundler",
        "test-name-discrepancies": "ts-node ./scripts/find-name-discrepancies/find-name-discrepancies.ts",
        "preversion": "git pull && git pull --tags && npm run test-without-package-generation && echo \"<- Note: In next command the packages are generated\" && npm run generate-publish-yml-commit",
        "postversion": "git push && git push --tags && npm run update-version-in-config-commit && npm run use-packages",
        "make": "npm run make-promptbook-collection && npm run update-version-in-config && npm run generate-packages && npm run generate-examples-bookc && npm run generate-documentation && npm run import-markdowns && npm run generate-openapi-types",
        "make-commit": "echo: \"TODO: !!! Either use make-commit in postversion or clean all generated things out of the repository together with -commit variants of scripts\"",
        "generate-packages": "ts-node ./scripts/generate-packages/generate-packages.ts",
        "generate-publish-yml-commit": "ts-node ./scripts/generate-packages/generate-packages.ts --skip-bundler --commit",
        "_NOTE-0": " <- Note: This is here to ensure that publish.yml is up to date before tagging the new version",
        "generate-documentation": "ts-node ./scripts/generate-documentation/generate-documentation.ts",
        "generate-documentation-commit": "ts-node ./scripts/generate-documentation/generate-documentation.ts --commit",
        "generate-examples-bookc": "ts-node ./scripts/generate-examples-bookc/generate-examples-bookc.ts ",
        "generate-examples-bookc-commit": "ts-node ./scripts/generate-examples-bookc/generate-examples-bookc.ts --commit",
        "generate-openapi-types": "npx openapi-typescript src/remote-server/openapi.yml -o src/remote-server/openapi-types.ts --immutable --export-type",
        "generate-openapi-types-commit": "npx openapi-typescript src/remote-server/openapi.yml -o src/remote-server/openapi-types.ts --immutable --export-type && git add . && git commit --allow-empty --message \"üè≠ Generate OpenAPI types\" && git push",
        "generate-prompt-boilerplates": "echo \"üöÄ Generate prompt boilerplate\" && ts-node scripts/generate-prompt-boilerplate/generate-prompt-boilerplate.ts",
        "import-markdowns": "npx deno --allow-env --allow-read --allow-write --allow-sys --unstable-sloppy-imports ./book/scripts/import-markdown/import-markdown.ts",
        "import-markdowns-commit": "npx deno --allow-env --allow-read --allow-write --allow-sys --unstable-sloppy-imports ./book/scripts/import-markdown/import-markdown.ts && cd ./book && git add . && git commit --allow-empty --message \"üìÑ Import markdowns\" && git push && cd .. && git add . && git commit --allow-empty --message \"üìÑ Import markdowns\"",
        "make-promptbook-collection": "ts-node ./scripts/make-promptbook-collection/make-promptbook-collection.ts",
        "make-promptbook-collection-commit": "ts-node ./scripts/make-promptbook-collection/make-promptbook-collection.ts --commit",
        "repair-imports-commit": "ts-node ./scripts/repair-imports/repair-imports.ts --commit",
        "update-version-in-config": "ts-node ./scripts/update-version-in-config/update-version-in-config.ts",
        "update-version-in-config-commit": "ts-node ./scripts/update-version-in-config/update-version-in-config.ts --commit",
        "use-packages": "ts-node ./scripts/use-packages/use-packages.ts",
        "components-playground": "cd ./scripts/book-components/ && npm run dev",
        "_TODO-1": "<- TODO: Remove all unused scripts",
        "_TODO-2": "<- TODO: [‚õé] Automatically sync commands to generate-packages.ts"
    },
    "engines": {
        "node": ">=16.0.0",
        "npm": ">=8.0.0"
    },
    "devDependencies": {
        "@rollup/plugin-json": "6.1.0",
        "@rollup/plugin-typescript": "8.3.0",
        "@types/crypto-js": "4.2.2",
        "@types/express": "5.0.0",
        "@types/jest": "29.5.8",
        "@types/jsdom": "21.1.7",
        "@types/mime-types": "2.1.4",
        "@types/papaparse": "5.3.15",
        "@types/prettier": "2.7.3",
        "@types/prompts": "2.4.9",
        "@types/react": "18.3.3",
        "@types/react-dom": "18.3.0",
        "@types/showdown": "2.0.6",
        "@types/swagger-ui-express": "4.1.8",
        "@typescript-eslint/eslint-plugin": "6.21.0",
        "@typescript-eslint/parser": "6.21.0",
        "cspell": "^9.0.1",
        "deno": "^2.2.8",
        "eslint": "8.57.0",
        "jest": "29.7.0",
        "openapi-typescript": "^7.6.1",
        "organize-imports-cli": "0.10.0",
        "rollup": "2.79.2",
        "rollup-plugin-polyfill-node": "0.13.0",
        "rollup-plugin-postcss": "^4.0.2",
        "rollup-plugin-visualizer": "5.13.1",
        "ts-jest": "29.1.1",
        "tslib": "2.3.1",
        "typescript": "5.2.2",
        "yaml": "2.3.3"
    },
    "dependencies": {
        "@ai-sdk/deepseek": "0.1.6",
        "@ai-sdk/google": "1.0.5",
        "@ai-sdk/openai": "1.0.7",
        "@anthropic-ai/sdk": "0.26.1",
        "@azure/openai": "1.0.0-beta.12",
        "@mozilla/readability": "0.6.0",
        "bottleneck": "^2.19.5",
        "colors": "1.4.0",
        "commander": "12.0.0",
        "cross-fetch": "4.0.0",
        "crypto": "1.0.1",
        "crypto-js": "4.2.0",
        "destroyable": "0.12.62",
        "dotenv": "16.3.1",
        "express": "4.21.2",
        "express-openapi-validator": "^5.4.9",
        "glob-promise": "6.0.5",
        "jsdom": "25.0.1",
        "jszip": "3.10.1",
        "lorem-ipsum": "2.0.8",
        "markitdown-ts": "0.0.4",
        "moment": "2.30.1",
        "openai": "4.63.0",
        "papaparse": "5.4.1",
        "prettier": "2.8.1",
        "prompts": "2.4.2",
        "react": "18.2.0",
        "react-dom": "18.2.0",
        "rxjs": "7.8.1",
        "showdown": "2.1.0",
        "socket.io": "4.8.1",
        "socket.io-client": "4.7.2",
        "spacetrim": "0.11.59",
        "swagger-ui-express": "5.0.1",
        "ts-node": "10.9.1",
        "type-fest": "4.5.0",
        "userhome": "1.0.1",
        "waitasecond": "1.11.83"
    }
}
