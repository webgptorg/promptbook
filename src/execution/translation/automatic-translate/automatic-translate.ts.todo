#!/usr/bin/env ts-node

import colors from 'colors'; // <- TODO: [🔶] Make system to put color and style to both node and browser
import commander from 'commander';
import { basename } from 'path';
import { createBestTranslator } from './automatic-translators/createBestTranslator.ts.todo';
import { translateMessages } from './translateMessages';

// TODO: This should be some prototype of the generator
// TODO: Activate TypeScript 3.8 and use top level await instead of wrapped code by main function

main()
    .catch((error) => {
        assertsError(error);
        console.error(colors.bgRed(`${error.name} in ${basename(__filename)}`));
        console.error(colors.red(error.stack || error.message));
        process.exit(1);
    })
    .then(() => {
        process.exit(0);
    });

async function main() {
    console.info(colors.bgGrey(`🏭🌐 Automatic translation`));

    const program = new commander.Command();
    program.option('--from <language>', `From what language to translate`);
    program.option('--to <language>', `To what language to translate`);
    program.option('--messages', `Translate messages`);

    program.parse(process.argv);
    const { from, to, messages } = program.opts();

    const automaticTranslator = createBestTranslator({ from, to });

    if (messages) {
        await translateMessages({ automaticTranslator, from, to });
    }
}
