{
    "title": "✨ Example: Parsing data to JSON",
    "pipelineUrl": "https://promptbook.studio/examples/expect-json.book",
    "formfactorName": "GENERIC",
    "parameters": [
        {
            "name": "sentence",
            "description": "Sentence to be processed",
            "isInput": true,
            "isOutput": false
        },
        {
            "name": "parsedSentence",
            "isInput": false,
            "isOutput": true,
            "exampleValues": [
                "{\n    \"subject\": \"dog\",\n    \"action\": \"running\",\n    \"object\": \"park\"\n}"
            ]
        }
    ],
    "tasks": [
        {
            "taskType": "PROMPT_TASK",
            "name": "question",
            "title": "💬 Question",
            "content": "Dark horse hopping over the fence.\n\n```json\n{\n  \"subject\": \"horse\",\n  \"action\": \"hopping\",\n  \"object\": \"fence\"\n}\n```\n\n---\n\n{sentence}\n\n```json",
            "resultingParameterName": "parsedSentence",
            "modelRequirements": {
                "modelVariant": "COMPLETION",
                "modelName": "gpt-3.5-turbo-instruct"
            },
            "postprocessingFunctionNames": [
                "trimEndOfCodeBlock"
            ],
            "format": "JSON",
            "dependentParameterNames": [
                "sentence"
            ]
        }
    ],
    "personas": [],
    "preparations": [],
    "knowledgeSources": [],
    "knowledgePieces": [],
    "sources": [
        {
            "type": "BOOK",
            "path": null,
            "content": "# ✨ Example: Parsing data to JSON\n\n-   PIPELINE URL https://promptbook.studio/examples/expect-json.book\n-   INPUT  PARAMETER {sentence} Sentence to be processed\n-   OUTPUT PARAMETER `{parsedSentence}`\n\n<!--Graph-->\n<!-- ⚠️ WARNING: This code has been generated so that any manual changes will be overwritten -->\n\n```mermaid\n%% 🔮 Tip: Open this on GitHub or in the VSCode website to see the Mermaid graph visually\n\nflowchart LR\n  subgraph \"✨ Example: Parsing data to JSON\"\n\n      direction TB\n\n      input((Input)):::input\n      question(\"💬 Question\")\n      input--\"{sentence}\"-->question\n\n      question--\"{parsedSentence}\"-->output\n      output((Output)):::output\n\n      click question href \"#question\" \"💬 Question\";\n\n      classDef input color: grey;\n      classDef output color: grey;\n\n  end;\n```\n\n<!--/Graph-->\n\n## 💬 Question\n\n-   MODEL VARIANT Completion\n-   MODEL NAME `gpt-3.5-turbo-instruct`\n-   POSTPROCESSING `trimEndOfCodeBlock`\n-   FORMAT JSON\n\n```\nDark horse hopping over the fence.\n\n\\`\\`\\`json\n{\n  \"subject\": \"horse\",\n  \"action\": \"hopping\",\n  \"object\": \"fence\"\n}\n\\`\\`\\`\n\n---\n\n{sentence}\n\n\\`\\`\\`json\n```\n\n`-> {parsedSentence}`\n\n### Example\n\nExample must pass the expectations\n\n-   EXAMPLE\n\n```json\n{\n    \"subject\": \"dog\",\n    \"action\": \"running\",\n    \"object\": \"park\"\n}\n```\n\n`-> {parsedSentence}`\n"
        }
    ]
}
