{
    "title": "✨ Example: Nesting",
    "pipelineUrl": "https://promptbook.studio/examples/nesting.book",
    "description": "How block are nested in the promptbook",
    "formfactorName": "GENERIC",
    "parameters": [
        {
            "name": "word",
            "description": "The word to use in the prompt.",
            "isInput": true,
            "isOutput": false
        },
        {
            "name": "poem",
            "isInput": false,
            "isOutput": true
        },
        {
            "name": "wordSynonym",
            "isInput": false,
            "isOutput": false
        },
        {
            "name": "sentence",
            "isInput": false,
            "isOutput": false
        }
    ],
    "tasks": [
        {
            "taskType": "PROMPT_TASK",
            "name": "synonym",
            "title": "💬 Synonym",
            "description": "Synonym for word",
            "content": "Write synonym for \"{word}\"",
            "resultingParameterName": "wordSynonym",
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-3.5-turbo"
            },
            "postprocessingFunctionNames": [
                "unwrapResult"
            ],
            "expectations": {
                "words": {
                    "min": 1,
                    "max": 1
                }
            },
            "dependentParameterNames": [
                "word"
            ]
        },
        {
            "taskType": "PROMPT_TASK",
            "name": "sentence",
            "title": "💬 Sentence",
            "description": "Sentence with the both words",
            "content": "Write sentence with \"{word}\" and \"{wordSynonym}\"",
            "resultingParameterName": "sentence",
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-3.5-turbo"
            },
            "postprocessingFunctionNames": [
                "unwrapResult"
            ],
            "expectations": {
                "sentences": {
                    "min": 1
                }
            },
            "dependentParameterNames": [
                "word",
                "wordSynonym"
            ]
        },
        {
            "taskType": "PROMPT_TASK",
            "name": "make-a-document",
            "title": "Make a document",
            "content": "Write poem with starting sentence:\n\n```text\n{sentence}\n```",
            "resultingParameterName": "poem",
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-3.5-turbo"
            },
            "postprocessingFunctionNames": [
                "unwrapResult"
            ],
            "dependentParameterNames": [
                "sentence"
            ]
        }
    ],
    "personas": [],
    "preparations": [],
    "knowledgeSources": [],
    "knowledgePieces": [],
    "sources": [
        {
            "type": "BOOK",
            "path": null,
            "content": "# ✨ Example: Nesting\n\nHow block are nested in the promptbook\n\n-   PIPELINE URL https://promptbook.studio/examples/nesting.book\n-   INPUT  PARAMETER `{word}` The word to use in the prompt.\n-   OUTPUT PARAMETER `{poem}`\n\n<!--Graph-->\n<!-- ⚠️ WARNING: This code has been generated so that any manual changes will be overwritten -->\n\n```mermaid\n%% 🔮 Tip: Open this on GitHub or in the VSCode website to see the Mermaid graph visually\n\nflowchart LR\n  subgraph \"✨ Example: Nesting\"\n\n      direction TB\n\n      input((Input)):::input\n      synonym(\"💬 Synonym\")\n      input--\"{word}\"-->synonym\n      sentence(\"💬 Sentence\")\n      input--\"{word}\"-->sentence\n      synonym--\"{wordSynonym}\"-->sentence\n      make-a-document(\"Make a document\")\n      sentence--\"{sentence}\"-->make-a-document\n\n      make-a-document--\"{poem}\"-->output\n      output((Output)):::output\n\n      click synonym href \"#synonym\" \"💬 Synonym\";\n      click sentence href \"#sentence\" \"💬 Sentence\";\n      click make-a-document href \"#make-a-document\" \"Make a document\";\n\n      classDef input color: grey;\n      classDef output color: grey;\n\n  end;\n```\n\n<!--/Graph-->\n\n## 💬 Synonym\n\nSynonym for word\n\n-   MODEL VARIANT Chat\n-   MODEL NAME `gpt-3.5-turbo`\n-   POSTPROCESSING `unwrapResult`\n-   EXPECT EXACTLY 1 WORD\n\n```text\nWrite synonym for \"{word}\"\n```\n\n`-> {wordSynonym}`\n\n## 💬 Sentence\n\nSentence with the both words\n\n-   MODEL VARIANT Chat\n-   MODEL NAME `gpt-3.5-turbo`\n-   POSTPROCESSING `unwrapResult`\n-   EXPECT MIN 1 SENTENCE\n\n```text\nWrite sentence with \"{word}\" and \"{wordSynonym}\"\n```\n\n`-> {sentence}`\n\n## Make a document\n\n-   MODEL VARIANT Chat\n-   MODEL NAME `gpt-3.5-turbo`\n-   POSTPROCESSING `unwrapResult`\n\n```markdown\nWrite poem with starting sentence:\n\n\\`\\`\\`text\n{sentence}\n\\`\\`\\`\n```\n\n`-> {poem}`\n"
        }
    ]
}
